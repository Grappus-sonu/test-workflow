name: Build and Deploy to GKE

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: 'web-sdk-docker' 
  PROJECT_ID: 'annular-welder-420212'
  GAR_LOCATION: 'asia-south2'
  REPOSITORY: 'web-sdk-docker-pipeline-demo'
  GCE_INSTANCE_NAME: 'uat-bastion-vm'
  GCE_INSTANCE_ZONE: 'asia-south1-c'

jobs:
  setup-build-publish-deploy:
    # if: false
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    outputs:
      image_path: ${{ steps.version.outputs.image_path }}

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'
      
      - name: 'Google auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS_PERSONAL }}'
    
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: '${{ env.PROJECT_ID }}'

      - name: 'Docker auth'
        run: gcloud auth configure-docker "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: "Get Version Number"
        id: "version"
        run: |-
          IMAGE_PATH="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}"
          version=$(\
            gcloud artifacts docker images list $IMAGE_PATH --include-tags --format="value(tags)" \
            | awk -F 'v' '{ print $2 }' \
            | awk '{ max = ($1 > max) ? $1 : max } END { print max + 1 }' \
          )
          # echo "IMAGE_PATH_WITH_VERSION=$( echo ${IMAGE_PATH}:v{version})" >> $GITHUB_OUTPUT
          # echo "new_version=$( echo $version)" >> $GITHUB_OUTPUT
          echo "image_path=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:v$( echo $version )" >> $GITHUB_OUTPUT

      # - name: 'Build and push container'
      #   run: |-
      #     docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:v${{ steps.version.outputs.new_version }}" .

  deploy-on-gce:
    # if: false
    name: 'Deploy on Google VM'
    needs: setup-build-publish-deploy
    runs-on: ubuntu-latest
    environment: production
    
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'
  
      - name: 'Google auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS_PERSONAL }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: '${{ env.PROJECT_ID }}'
      
      # - name: 'Create Script'
      #   id: 'deploy-script'
      #   run: res=$(cat << EOF
      #     test1
      #     test2
      #     test3
      #     EOF
      #     ) >> $GITHUB_OUTPUT

      - name: "Deploy"
        run: |-
          gcloud compute ssh ${{ env.GCE_INSTANCE_NAME }} --zone=${{ env.GCE_INSTANCE_ZONE }} --ssh-key-file=${{ env.secrets.GCP_SSH_PRIVATE_KEY_PERSONAL }}
          cd /var/opt/uat-protean/web-sdk
          awk -v path="${{needs.setup-build-publish-deploy.outputs.image_path}}" '/^[[:space:]]+image/ && !p_chng{sub(/:.+$/,": "path); p_chng=1} 1' websdk-deployment.yml > tmp
          mv tmp websdk-deployment.yml
          cat websdk-deployment.yml
          exit
  
      # - id: 'compute-ssh'
      #   uses: 'google-github-actions/ssh-compute@v1'
      #   with:
      #     instance_name: '${{ env.GCE_INSTANCE_NAME }}'
      #     zone: '${{ env.GCE_INSTANCE_ZONE }}'
      #     ssh_private_key: '${{ secrets.GCP_SSH_PRIVATE_KEY_PERSONAL }}'
      #     script: '../../script.sh ${{ needs.setup-build-publish-deploy.outputs.image_path }}'
          # command: "sudo echo ${{steps.deploy-script.outputs.script}}"

      # - id: 'test'
      #   run: |-
      #     echo '${{ steps.compute-ssh.outputs.stdout }}'
      #     echo '${{ steps.compute-ssh.outputs.stderr }}'

      # Example of using the output
      # - name: 'Edit File'
      #   run: |-
      #     cd /var/opt/uat-protean/web-sdk
      #     sudo awk '/^[[:space:]]+image/ && !p_chng{sub(/:.+$/,": ${{ needs.setup-build-publish-deploy.outputs.image_path }}"); p_chng=1} 1' websdk-deployment.yml
      #     cat websdk-deployment.yml
          
  
